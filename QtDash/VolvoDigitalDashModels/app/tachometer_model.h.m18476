#ifndef TACHOMETER_MODEL_H
#define TACHOMETER_MODEL_H
#include <QAbstractItemModel>
#include <QTimer>

class TachometerModel : public QAbstractItemModel
{
    Q_OBJECT
    enum TachometerRoles{
        RpmRole = Qt::UserRole + 1,
    }
public:
    explicit TachometerModel(QObject *parent = nullptr);

    /**
     * @brief headerData
     * @param section section of data
     * @param orientation orientation of data
     * @param role role of data
     * @return
     *
     * Provides the header data for given params.
     */
    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override;

    /**
     * @brief index
     * @param row
     * @param column
     * @param parent
     * @return
     *
     * Provides the index for the given row/col.
     */
    QModelIndex index(int row, int column,
                      const QModelIndex &parent = QModelIndex()) const override;

    /**
     * @brief parent
     * @param index
     * @return
     *
     * Provides the parent object for given index.
     */
    QModelIndex parent(const QModelIndex &index) const override;

    /**
     * @brief rowCount
     * @param parent
     * @return
     *
     * Returns the row count for given index.
     */
    int rowCount(const QModelIndex &parent = QModelIndex()) const override;

    /**
     * @brief columnCount
     * @param parent
     * @return
     *
     * Returns the column count for given index.
     */
    int columnCount(const QModelIndex &parent = QModelIndex()) const override;

    /**
     * @brief data
     * @param index
     * @param role
     * @return
     *
     * Provides the data found at given index and role.
     */
    QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const override;

    /**
     * @brief roleNames
     * @return
     *
     * Enables integration with QML by providing names for use as refs in QML.
     */
    QHash<int, QByteArray> roleNames() const override;

};

#endif // TACHOMETER_MODEL_H
